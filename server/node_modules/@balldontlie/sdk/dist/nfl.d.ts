import { BaseClient, ApiResponse, NFLTeam, NFLPlayer, NFLGame, NFLStats, NFLStandings, NFLAdvancedPassingStats, NFLAdvancedReceivingStats, NFLAdvancedRushingStats, NFLPlayerInjury, NFLSeasonStats } from "./types";
export declare class NFLClient extends BaseClient {
    getTeams(params?: {
        division?: string;
        conference?: string;
    }): Promise<ApiResponse<NFLTeam[]>>;
    getTeam(id: number): Promise<ApiResponse<NFLTeam>>;
    getPlayers(params?: {
        cursor?: number;
        per_page?: number;
        team_ids?: number[];
        player_ids?: number[];
        search?: string;
        first_name?: string;
        last_name?: string;
    }): Promise<ApiResponse<NFLPlayer[]>>;
    getActivePlayers(params?: {
        cursor?: number;
        per_page?: number;
        team_ids?: number[];
        player_ids?: number[];
        search?: string;
        first_name?: string;
        last_name?: string;
    }): Promise<ApiResponse<NFLPlayer[]>>;
    getGames(params?: {
        cursor?: number;
        per_page?: number;
        dates?: string[];
        team_ids?: number[];
        seasons?: number[];
        postseason?: boolean;
        weeks?: number[];
    }): Promise<ApiResponse<NFLGame[]>>;
    getGame(id: number): Promise<ApiResponse<NFLGame>>;
    getStats(params?: {
        cursor?: number;
        per_page?: number;
        player_ids?: number[];
        game_ids?: number[];
        seasons?: number[];
    }): Promise<ApiResponse<NFLStats[]>>;
    getStandings(params: {
        season: number;
    }): Promise<ApiResponse<NFLStandings[]>>;
    getPlayerInjuries(params?: {
        cursor?: number;
        per_page?: number;
        team_ids?: number[];
        player_ids?: number[];
    }): Promise<ApiResponse<NFLPlayerInjury[]>>;
    getSeasonStats(params: {
        season: number;
        player_ids?: number[];
        team_id?: number;
        postseason?: boolean;
        sort_by?: string;
        sort_order?: "asc" | "desc";
    }): Promise<ApiResponse<NFLSeasonStats[]>>;
    getAdvancedRushingStats(params: {
        season: number;
        player_id?: number;
        week?: number;
    }): Promise<ApiResponse<NFLAdvancedRushingStats[]>>;
    getAdvancedPassingStats(params: {
        season: number;
        player_id?: number;
        week?: number;
    }): Promise<ApiResponse<NFLAdvancedPassingStats[]>>;
    getAdvancedReceivingStats(params: {
        season: number;
        player_id?: number;
        week?: number;
    }): Promise<ApiResponse<NFLAdvancedReceivingStats[]>>;
}
